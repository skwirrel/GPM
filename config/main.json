/*
 * GPM configuration files are written in hjson format. See: https://hjson.org/
 * Basically... it JSON, but with comments and a bit less fussy
 * 
 * GPM extends hjson by adding support for interpolation of values (and keys) thus:
 * If a config parameter "homeDir" is set to "/home/fred", then 
 * a config value encountered later of "<<homeDir>>/stuff" will evaluate to "/home/fred/stuff"
 * The interpolation supports properties and array indices e.g. if this config is defined...
 * 
 *     one: {
 *         two: {
 *            three: [ 'aaa', 'bbb', 'ccc' ]
 *         }
 *     }
 *
 * ...then "some_<<one.two.three[1]>>_stuff" will evaluate to "some_bbb_stuff"
 * 
 * Interpolation is not confined just to values - it can also be used in key names
 * 
 * GPM also adds support for replacing "~" with the user's home directory, but ONLY WHEN...
 * 1.The "~" is the first character in the configuration value e.g. "~/GPM"
 * 2.The configuration key name ends "Dir" or "Directory" (case insensitive
 * 
 * GPM reads config from 4 places in the following order:
 * 1. Internal built in default values - most parameters will have a built in default.
 * 2. <GPM base directory>/config/main.json
 * 3. <GPM base directory>/config/<script path>/<script name minus ".js">.json
 *      e.g. the script tasks/assistant/playlistMaker.js will load config from "<GPM base directory>/config/tasks/assistant/playlistMaker.json"
 * 4. <user's home directory>/.GPM/config.json
 * 
 * Any key that appears in a latter file will override the same key from a former file.
 * 
 * Nested structures are merged. Thus if main.js defines this...
 *     one: {
 *         two: {
 *            three: [ 'aaa', 'bbb', 'ccc' ],
 *            five: '999'
 *         }
 *     }
 * ...but then the script config defines this...
 *     one: {
 *         two: {
 *            four: [ 'xxx', 'yyy', 'zzz' ]
 *            five: '555'
 *         }
 *     }
 * ... then the net result will be...
 *     one: {
 *         two: {
 *            three: [ 'aaa', 'bbb', 'ccc' ],
 *            four: [ 'xxx', 'yyy', 'zzz' ]
 *            five: '555'
 *         }
 *     }
 */

{
    "baseDirectory"             : "~/.GPM",
    
    // Using Google's speech to text, or text to speech requires having a credentials file
    "googleCloudCredentials"    : "<<baseDirectory>>/gcloudCredentials.json"
    
    // Specify which tts engine to use - at the moment there is only one!
    // This takes the form of an array containing the command to run followed by any arguments
    "ttsEngine"                 : ['python3','tts/googleTts.py'],
    "ttsCacheDirectory"         : "<<baseDirectory>>/ttsCache",
    "ttsCacheSize"              : 10485760, # 10MB of cached tts audio
}
